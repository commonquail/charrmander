<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cfgFileExtension" xml:space="preserve">
    <value>.charr</value>
  </data>
  <data name="cfgFileFilter" xml:space="preserve">
    <value>Charrmander Character File (.charr)|*.charr</value>
  </data>
  <data name="cfgFileName" xml:space="preserve">
    <value>GW2 Character List</value>
  </data>
  <data name="cfgUpdateCheckUri" xml:space="preserve">
    <value>https://bitbucket.org/jokum/charrmander/raw/tip/VersionHistory.xml</value>
  </data>
  <data name="cfgXsdpath" xml:space="preserve">
    <value>Resources/charr.xsd</value>
  </data>
  <data name="msgOpenFailedNoFileBody" xml:space="preserve">
    <value>The file you are trying to load could not be found.</value>
  </data>
  <data name="msgOpenFailedNoFileTitle" xml:space="preserve">
    <value>File Not Found</value>
  </data>
  <data name="msgOpenFailedParsingBody" xml:space="preserve">
    <value>The file you are trying to load contains errors and could not be opened: {0}</value>
  </data>
  <data name="msgOpenFailedParsingTitle" xml:space="preserve">
    <value>Parse Error</value>
  </data>
  <data name="msgOpenFailedValidationBody" xml:space="preserve">
    <value>Document not a Charrmander GW2 character list file or document is malformed.</value>
  </data>
  <data name="msgOpenFailedValidationTitle" xml:space="preserve">
    <value>Validation Error</value>
  </data>
  <data name="msgRegisterExtensionBody" xml:space="preserve">
    <value>This operation will write to the system registry. Do you wish to proceed?</value>
  </data>
  <data name="msgRegisterExtensionTitle" xml:space="preserve">
    <value>Register File Association</value>
  </data>
  <data name="msgReloadFileBody" xml:space="preserve">
    <value>File already open. Would you like to reload it?</value>
  </data>
  <data name="msgReloadFileTitle" xml:space="preserve">
    <value>Reload file?</value>
  </data>
  <data name="msgUnsavedExitBody" xml:space="preserve">
    <value>Unsaved changes. Are you sure you wish to discard and exit?</value>
  </data>
  <data name="msgUnsavedExitTitle" xml:space="preserve">
    <value>Discard changes and exit?</value>
  </data>
  <data name="msgUnsavedOpenBody" xml:space="preserve">
    <value>There are unsaved changes. Are you sure you wish to open a file? Doing so will discard all unsaved changes.</value>
  </data>
  <data name="msgUnsavedOpenTitle" xml:space="preserve">
    <value>Discard unsaved changes and open?</value>
  </data>
  <data name="msgUpdateCheckFailedBody404" xml:space="preserve">
    <value>Failed to connect to {0}:
{1}</value>
  </data>
  <data name="msgUpdateCheckFailedBodyReading" xml:space="preserve">
    <value>An error occurred while processing the version history file.</value>
  </data>
  <data name="msgUpdateCheckFailedBodyUnknown" xml:space="preserve">
    <value>Unexpected error: {0}</value>
  </data>
  <data name="msgUpdateCheckFailedTitle" xml:space="preserve">
    <value>Update Check Failed</value>
  </data>
  <data name="msgUpdateCheckNoUpdatesBody" xml:space="preserve">
    <value>There is currently no update available.</value>
  </data>
  <data name="msgUpdateCheckNoUpdatesTitle" xml:space="preserve">
    <value>No Update Available</value>
  </data>
  <data name="wnWindowTitle" xml:space="preserve">
    <value>{0}{1} - Charrmander</value>
  </data>
  <data name="xNamespace" xml:space="preserve">
    <value>http://charr.org</value>
  </data>
</root>